#!/bin/bash
#
#   MobileIron Ldap Connector Status Nagios check script
#
#   Copyright (C) 2016  Gary McConnell - Clever Consulting Srl.
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

# ####################################################
# Set the script name variables
# ####################################################
mSCRIPTNAME=$(basename $0)
mTEMP="$mSCRIPTNAME.XXXXXXXXXX"

# ####################################################
# Check for correct number of arguments/variables set
# ####################################################
if [ -z "$3" ]
  then
    echo "usage: $mSCRIPTNAME <HOSTNAME> <USERNAME> <PASSWORD>"
    exit 3
fi

# ####################################################
# Set the script Variables
# ####################################################
mVSP=$1
mVSP_USERNAME=$2
mVSP_PASSWORD=$3
mTMP_DIR="/tmp"
mPLUGIN_DIR="/usr/lib64/nagios/plugins"

mCOOKIES=$(mktemp "$mTMP_DIR/$mTEMP.Cookies")
mFILETMP1=$(mktemp "$mTMP_DIR/$mTEMP.1")
mFILETMP2=$(mktemp "$mTMP_DIR/$mTEMP.2")
mFILETMP3=$(mktemp "$mTMP_DIR/$mTEMP.3")
mFILEJSON=$(mktemp "$mTMP_DIR/$mTEMP.JSON")
mLIBJSON=$mPLUGIN_DIR/check_mi_JSON

# ####################################################
# Remote Call to MobileIron Service Login
# ####################################################
curl -k --data "j_username=$mVSP_USERNAME&j_password=$mVSP_PASSWORD&spid=&submit=LOGIN" -H "Referer: https://$mVSP/mifs/login.jsp" https://$mVSP/mifs/j_spring_security_check --cookie-jar $mCOOKIES --location > $mFILETMP1
# get NONCE Value
mCSRFKEY=$(cat $mFILETMP1 | grep csrfKey | tr -s " " | cut -d "\"" -f2)
mCSRFVALUE=$(cat $mFILETMP1 | grep csrfNonce | tr -s " " | cut -d "\"" -f2)
#echo "MobileIron Login response results: $mFILETMP1"
#echo "MobileIron $mCSRFKEY - $mCSRFVALUE"

# ####################################################
# Remote Call to MobileIron LDAP Connector Status
# ####################################################
curl -k "https://$mVSP/mifs/admin/ud.html?_dc=`date +%s`&command=getConnectorSetingsList&action=getConnectorSetingsList" --cookie $mCOOKIES  -H "$mCSRFKEY: $mCSRFVALUE" --location  > $mFILETMP2
echo "MobileIron LDAP response results: $mFILETMP2"

# total numbers connectors by searching for "total", triming the line at the second  "," and then back to the last ":"
mLDAP_TOTAL=$(cat $mFILETMP2  | grep total | cut -d "," -f2 | cut -d ":" -f2)
echo "MobileIron LDAP Connectors found: $mLDAP_TOTAL"

# ####################################################
# Covert the response to JSON format in txt file
# ####################################################
cat $mFILETMP2 | $mLIBJSON -b > $mFILEJSON

mSTATUS=
mTOTALSTATUS=
mEXIT=

# ####################################################
# check loop for connectors not up
# ####################################################
n=0
while [ $n -lt $mLDAP_TOTAL ]
do
	mLDAPSTATUS=$(cat $mFILEJSON | grep "serviceBackendStatus" | grep ",$n," | cut -d "]" -f2 | xargs )
	mLDAP_SYNCNAME=$(cat $mFILEJSON  | grep name | grep ",$n,"| cut -d "]" -f2 | xargs)
	if [ "$mLDAPSTATUS" != "LDAP:UP " ]
	then
	   	mLDAP_SYNCSTATUS=$(cat $mFILEJSON  | grep syncStatus | grep ",$n,"| cut -d "]" -f2 | xargs)
	   	mLDAP_SYNCRESULT=$(cat $mFILEJSON  | grep syncResult | grep ",$n,"| cut -d "]" -f2 | xargs)
	   	#mSTATUS="*START* $mLDAP_SYNCNAME / $mLDAPSTATUS / $mLDAP_SYNCSTATUS / $mLDAP_SYNCRESULT / *END* "
	   	mSTATUS="$mLDAP_SYNCNAME / $mLDAPSTATUS / $mLDAP_SYNCSTATUS / $mLDAP_SYNCRESULT *** "
	   	mEXIT=1
	else
		#mSTATUS="*START* $mLDAP_SYNCNAME OK *END* "
		mSTATUS="$mLDAP_SYNCNAME OK *** "
	 	mEXIT=0
	fi
	mTOTALSTATUS="$mTOTALSTATUS $mSTATUS"
	n=$(( n+1 ))	 # increments $n
done

# ####################################################
# Generic NO DATA FOUND error
# ####################################################
if [ "$mTOTALSTATUS" == "" ]
	then
	 	mTOTALSTATUS="ERROR: NO DATA"
	 	mEXIT=3
fi

mTOTALSTATUS=$(sed "s/://g" <<< $mTOTALSTATUS)
mMI_STATUS_Connectors=$mTOTALSTATUS

# ####################################################
# Delete all files created during process
# ####################################################
rm -rf  $mCOOKIES
rm -rf $mFILETMP1
rm -rf $mFILETMP2
rm -rf $mFILETMP3
rm -rf $mFILEJSON

# ####################################################
# Exit script
# ####################################################
echo "-------------Connectors-------------"
echo "$mMI_STATUS_Connectors"
echo "------------------------------------"
exit $mEXIT
